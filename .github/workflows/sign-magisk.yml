name: sign-one-partition-only-magisk

on:
  workflow_dispatch:
    inputs:
      IMG_URL:    
        description: 'URL of image'
        required: true
        default: ''
      PART_NAME:    
        description: 'partition name of your image (eg. boot/recovery)'
        required: true
        default: ''
      PART_SIZE:    
        description: 'partition size (unit: mb)'
        required: false
      EXTRA_KEY_TREE_URL:
        description: 'EXTRA_KEY_TREE_URL (leave blank if you only use unisoc keys)'
        required: false
      EXTRA_KEY_BRANCH:
        description: 'EXTRA_KEY_BRANCH (leave blank if you only use unisoc keys)'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/catthehacker/ubuntu:runner-20.04
    steps:
    
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: main
        path: main

    - name: Setup SSH Keys
      if: ${{ startsWith(github.event.inputs.EXTRA_KEY_TREE_URL, 'git@github.com') }}
      uses: webfactory/ssh-agent@v0.9.0
      with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Clone extra keys
      if: |
        github.event.inputs.EXTRA_KEY_TREE_URL != null
        && github.event.inputs.EXTRA_KEY_BRANCH != null
      run: |
        git clone ${{ github.event.inputs.EXTRA_KEY_TREE_URL }} -b ${{ github.event.inputs.EXTRA_KEY_BRANCH }} ./extra_key

    - name: patch
      run: |
        sudo apt update
        sudo apt -y install build-essential python openssl curl wget busybox
        wget https://bootstrap.pypa.io/pip/2.7/get-pip.py && sudo python2.7 get-pip.py
        pip2 install pycryptodome
        curl -o avbtool.tgz -L "https://android.googlesource.com/platform/external/avb/+archive/refs/heads/pie-release.tar.gz"
        curl -o magisk.apk -L $(curl -s https://raw.githubusercontent.com/topjohnwu/magisk-files/master/stable.json | grep -A5 '"magisk":' | grep '"link":' | sed -E 's/.*"([^"]+)".*/\1/')
        wget https://raw.githubusercontent.com/magojohnji/magiskboot-linux/main/x86_64/magiskboot
        chmod +x magiskboot
        mkdir -p boot/zzz
        mkdir work
        mv main/boot_patch.sh boot/
        mv main/sign_avb.sh work/
        chmod +x boot/*
        chmod +x work/*
        busybox unzip -oq magisk.apk -d boot/zzz
        curl -o boot/boot.img -L "${{ github.event.inputs.IMG_URL }}"
        tar xzvf avbtool.tgz -C work/
        cp main/config/*.pem work/
        cp -f work/rsa4096_boot.pem work/rsa4096_dtb.pem
        cp -f work/rsa4096_boot.pem work/rsa4096_dtbo.pem
        if [ -d extra_key ]; then cp -f extra_key/*.pem work/; fi
        sudo rm -f /usr/bin/python /usr/bin/python3.6 /usr/bin/python3.6m /usr/local/bin/python
        sudo ln -sf /usr/bin/python2.7 /usr/bin/python
        cd boot
        ./boot_patch.sh ${{ github.event.inputs.PART_SIZE }}
        cd ../work
        ./sign_avb.sh ${{ github.event.inputs.PART_NAME }} ../boot/boot.img ../boot/patched.img ${{ github.event.inputs.PART_SIZE }}
        cp ../boot/patched.img ../image.img

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: | 
          image.img
        name: ${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          URL: ${{ github.event.inputs.IMG_URL }}
          PART_NAME: ${{ github.event.inputs.PART_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
